AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >
  This serverless app sets up the CI infrastructure for a GitHub-based SAM python project.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: python-sam-codebuild-ci
    Description: >
      This serverless app sets up an AWS CodeBuild Project as a CI solution for a GitHub-based SAM python project. Once setup, everytime you
      push to your GitHub repository, CodeBuild will kick off a build verifying your latest changes.
    Author: James Hood
    SpdxLicenseId: MIT
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: [github, python, ci, codebuild, continuous-integration, sam]
    HomePageUrl: https://github.com/jlhood/python-sam-codebuild-ci
    SemanticVersion: 1.2.4
    SourceCodeUrl: https://github.com/jlhood/python-sam-codebuild-ci/tree/1.2.4

Parameters:
  GitHubOwner:
    Description: GitHub username owning the repo
    Type: String
  GitHubRepo:
    Description: GitHub repo name
    Type: String
  GitHubOAuthToken:
    Description: OAuth token used by AWS CodeBuild to connect to GitHub
    Type: String
    NoEcho: true
  ComputeType:
    Description: AWS CodeBuild project compute type.
    Type: String
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE
    Default: BUILD_GENERAL1_SMALL
  PythonVersion:
    Description: Python version of image used by AWS CodeBuild. See the documentation for details (https://docs.aws.amazon.com/codebuild/latest/userguide/create-project.html#create-project-cli).
    Type: String
    Default: 3.7.1
  EnvironmentType:
    Description: Environment type used by AWS CodeBuild. See the documentation for details (https://docs.aws.amazon.com/codebuild/latest/userguide/create-project.html#create-project-cli).
    Type: String
    AllowedValues:
      - LINUX_CONTAINER
      - WINDOWS_CONTAINER
    Default: LINUX_CONTAINER

Resources:
  Project:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt ProjectRole.Arn
      BadgeEnabled: true
      Source:
        Type: GITHUB
        Location: !Sub https://github.com/${GitHubOwner}/${GitHubRepo}.git
        GitCloneDepth: 1
        ReportBuildStatus: true
        Auth:
          Type: OAUTH
          Resource: !Ref GitHubOAuthToken
      Triggers:
        Webhook: true
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: !Ref ComputeType
        Image: !Sub aws/codebuild/python:${PythonVersion}
        Type: !Ref EnvironmentType
        EnvironmentVariables:
        - Name: PACKAGE_BUCKET
          Value: !Ref Artifacts
        - Name: AWS_DEFAULT_REGION
          Value: !Sub ${AWS::Region}
  ProjectRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - "codebuild.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: /service-role/
      Policies:
      - PolicyName: CICodeBuildRolePolicy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            Resource:
            - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
          - Effect: Allow
            Action:
            - "s3:PutObject"
            - "s3:GetObject"
            - "s3:GetObjectVersion"
            - "s3:ListBucket"
            Resource:
            - !Sub arn:${AWS::Partition}:s3:::${Artifacts}
            - !Sub arn:${AWS::Partition}:s3:::${Artifacts}/*
          - Effect: Allow
            Action:
            # permissions needed by sam build if app contains nested apps
            - "serverlessrepo:GetApplication"
            - "serverlessrepo:CreateCloudFormationTemplate"
            - "serverlessrepo:GetCloudFormationTemplate"
            Resource: *

  Artifacts:
    Type: AWS::S3::Bucket
    Properties:
      LifecycleConfiguration:
        Rules:
        - ExpirationInDays: 30
          Status: Enabled

  PRBuildLogs:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:277187709615:applications/github-codebuild-logs
        SemanticVersion: 1.0.4
      Parameters:
        # Name of CodeBuild project this app is posting logs for.
        CodeBuildProjectName: !Ref Project

Outputs:
  ProjectName:
    Value: !Ref Project
  ProjectArn:
    Value: !GetAtt Project.Arn
  ArtifactsBucketName:
    Value: !Ref Artifacts
  ArtifactsBucketArn:
    Value: !GetAtt Artifacts.Arn
